############################################################
FROM ubuntu:20.04 AS base

ARG GCC_VERSION=9
ARG DEBIAN_FRONTEND=noninteractive
ARG UID=1000
ARG USERNAME=dev

RUN useradd -l -m $USERNAME -u $UID

ENV CXX=/usr/bin/g++-${GCC_VERSION}
WORKDIR /workdir

### basic packages
RUN apt-get update && apt-get install --no-install-recommends \
    cmake g++-${GCC_VERSION} git build-essential ca-certificates sudo vim \
    x11-xkb-utils libfreetype-dev python3-pip gdb -y && \
    rm -rf /var/lib/apt/lists/*

### valgrind / massif-visualizer
### https://valgrind.org/docs/manual/ms-manual.html
### https://github.com/KDE/massif-visualizer
RUN apt-get update && apt-get install --no-install-recommends \
    valgrind massif-visualizer -y && \
    rm -rf /var/lib/apt/lists/*

### Emma - memory and mapfile analyser
### https://github.com/bmwcarit/Emma
RUN pip3 install Pygments Markdown matplotlib==3.2.0 pandas==1.2.0 pypiscout svgwrite pypiemma
ENV PATH="${PATH}:~/.local/bin"

### mbed-os-linker-report
### https://github.com/ARMmbed/mbed-os-linker-report
RUN apt-get update && apt-get install --no-install-recommends \
    binutils-arm-none-eabi -y && \
    rm -rf /var/lib/apt/lists/*

RUN git clone https://github.com/ARMmbed/mbed-os-linker-report.git --single-branch

### heaptrack dependencies
RUN apt-get update && apt-get install --no-install-recommends \
    zlib1g-dev libunwind-dev libboost-iostreams-dev libboost-program-options-dev \
    libboost-system-dev libboost-filesystem-dev gettext \
    extra-cmake-modules qtbase5-dev libkchart-dev \
    libkf5coreaddons-dev libkf5i18n-dev libkf5itemmodels-dev libkf5threadweaver-dev \
    libkf5configwidgets-dev libkf5kio-dev libkf5iconthemes-dev -y && \
    rm -rf /var/lib/apt/lists/*

### bloaty - a size profiler for binaries
### https://github.com/google/bloaty
FROM base AS bloaty
RUN apt-get update && apt-get install --no-install-recommends libz-dev -y
RUN git clone https://github.com/google/bloaty.git --single-branch --recursive && \
    cd bloaty && \
    cmake -B build -S . && \
    cmake --build build --target install -j3

### heaptrack
### https://github.com/KDE/heaptrack
FROM base AS heaptrack
RUN git clone https://github.com/KDE/heaptrack.git --single-branch && \
    cd heaptrack && \
    cmake -B build -S . && \
    cmake --build build --target install && \
    cd .. && \
    rm -rf heaptrack

############################################################
### final image
FROM base AS final
COPY --from=bloaty /usr/local/lib/Bloaty /usr/local/lib/Bloaty
COPY --from=bloaty /usr/local/bin/bloaty /usr/local/bin/bloaty
COPY --from=heaptrack /usr/lib/heaptrack /usr/lib/heaptrack
COPY --from=heaptrack /usr/bin/heaptrack /usr/bin/heaptrack
COPY --from=heaptrack /usr/bin/heaptrack_gui /usr/bin/heaptrack_gui

# QStandardPaths: XDG_RUNTIME_DIR points to non-existing path '/tmp/runtime-panajot/', please create it with 0700 permissions.
RUN mkdir -m 700 /tmp/runtime-${USERNAME}/ && chown $UID /tmp/runtime-${USERNAME}/
ENV XDG_RUNTIME_DIR=/tmp/runtime-${USERNAME}/

############################################################
### Qt6 installation. qtaccount.ini with credentials required when building image
### clang
FROM final AS base-qt
RUN apt-get update && apt-get install --no-install-recommends \
    lsb-release wget software-properties-common gnupg -y && \
    rm -rf /var/lib/apt/lists/*

### stm32 dependencies
RUN apt-get update && apt-get install --no-install-recommends \
    libusb-1.0-0 libxtst6 libxi6 -y && \
    rm -rf /var/lib/apt/lists/*

RUN wget https://apt.llvm.org/llvm.sh && chmod +x llvm.sh && \
    ./llvm.sh 13 all && \
    rm ./llvm.sh
ENV PATH="/usr/lib/llvm-13/bin:${PATH}"

FROM base-qt AS qtinstaller
ADD qtaccount.ini /root/.local/share/Qt/qtaccount.ini
ADD https://download.qt.io/archive/online_installers/4.0/qt-unified-linux-x64-4.0.1-1-online.run ./qtinstaller
RUN apt-get update && apt-get install --no-install-recommends \
    libxcomposite-dev libwayland-cursor0 -y && \
    rm -rf /var/lib/apt/lists/*

RUN chmod +x ./qtinstaller && \
    ./qtinstaller in qt.qt6.624.gcc_64 qt.qt6.624.addons.qtserialport \
    qt.qt6.624.addons.qtwebsockets qt.qt6.624.addons.qtimageformats qt.tools.cmake \
    --auto-answer telemetry-question=Yes --default-answer --accept-licenses \
    --accept-obligations --confirm-command \
    -t /opt/Qt

FROM base-qt AS final-qt
COPY --from=qtinstaller /opt/Qt /opt/Qt

ENV PATH="/opt/Qt/6.2.4/gcc_64/bin:/opt/Qt/Tools/CMake/bin:${PATH}"
ENV CMAKE_PREFIX_PATH="/opt/Qt/6.2.4/gcc_64/lib/cmake"
ENV Qt6_DIR="/opt/Qt/6.2.4/gcc_64/lib/cmake"
ENV LD_LIBRARY_PATH="/opt/Qt/6.2.4/gcc_64/lib"
